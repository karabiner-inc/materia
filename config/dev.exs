use Mix.Config

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with brunch.io to recompile .js and .css sources.
config :materia, MateriaWeb.Endpoint,
  http: [port: 4000],
  debug_errors: true,
  code_reloader: true,
  check_origin: false,
  watchers: []

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# command from your terminal:
#
#     openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -subj "/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com" -keyout priv/server.key -out priv/server.pem
#
# The `http:` config above can be replaced with:
#
#     https: [port: 4000, keyfile: "priv/server.key", certfile: "priv/server.pem"],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :materia, MateriaWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r{priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$},
      ~r{priv/gettext/.*(po)$},
      ~r{lib/materia_web/views/.*(ex)$},
      ~r{lib/materia_web/templates/.*(eex)$}
    ]
  ]

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Configure your database
config :materia, Materia.Test.Repo,
  adapter: Ecto.Adapters.Postgres,
  username: "postgres",
  password: "postgres",
  database: "materia_dev",
  hostname: "localhost",
  pool_size: 10

# Configure materia repo
config :materia, :repo, Materia.Test.Repo

# Configure materia verify mail
config :materia, Materia.Accounts,
  verify_url: "https://google.com",
  verify_mail_from_address: "tcr.yoshimura@karabiner.tech",
  verify_mail_subject: "【開発環境】ServiceX メールアドレス確認",
  # verify mail template
  # place holders
  #  @user_name@  display user name.
  #  @verify_url@  service verify page url. replace that "{verify_url}?verify_key={verify_key}"
  #
  verify_mail_template: "@user_name@ 様
この度は弊社サービスに仮登録いただきありがとうございます。

本登録の手順をご案内いたします。
２４時間以内に下記URLへアクセスいただくことでサービスへの登録が完了いたします。

 @verify_url@?verify_key=@verify_key@

今後とも弊社サービスをよろしくお願いいたします。

＜お問い合わせ＞
 @support_url@
",
  rregstered_mail_subject: "【開発環境】ServiceX ユーザ登録完了",
  # registrated_mail template
  # place holders
  #  @user_name@  display user name.
  #  @user_mail@ display mail address.
  #  @conntact_url@  support page url
  #  @password_reset_url@ password reset page url
  regstered_mail_template: "@user_name@ 様
この度は弊社サービスにご登録いただきありがとうございます。

メールアドレス： @user_mail@
パスワード： 登録時にご入力いただいたパスワード
※ セキュリティ観点から本メールにはパスワードは記載いたしません。
  パスワードが不明の方は下記URLよりパスワードリセットの手続きをお願いいたします。

＜パスワードの再設定＞
 @password_reset_url@

＜お問い合わせ＞
 @support_url@
"

config :materia, Materia.MailClient, verify_mail_ses_region: "us-west-2"

# Configure materia application authenticator
# recomend you generate complex app_key by "mix phx.gen.secret" command.
config :materia, Materia.Plug.ApplicationKeyChecker, app_key: "test_app_key"
